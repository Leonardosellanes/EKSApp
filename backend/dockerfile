# Usamos la imagen oficial de PHP con CLI para ejecutar artisan serve
FROM php:8.2-cli

# Establecemos el directorio de trabajo dentro del contenedor
WORKDIR /var/www/html

# Instalamos las extensiones necesarias de PHP para Laravel y PostgreSQL
RUN apt-get update && apt-get install -y \
    libpng-dev \
    libjpeg-dev \
    libfreetype6-dev \
    libzip-dev \
    zip \
    unzip \
    libpq-dev \
    && docker-php-ext-configure gd --with-freetype --with-jpeg \
    && docker-php-ext-install gd pdo pdo_pgsql zip bcmath

# Instalamos Composer globalmente
COPY --from=composer:latest /usr/bin/composer /usr/bin/composer

# Copiamos los archivos del proyecto Laravel al contenedor
COPY . /var/www/html

# Damos permisos a la carpeta de almacenamiento y bootstrap
RUN chown -R www-data:www-data /var/www/html \
    && chmod -R 755 /var/www/html/storage \
    && chmod -R 755 /var/www/html/bootstrap/cache

# Instalamos las dependencias de Laravel con Composer
RUN composer install --no-dev --optimize-autoloader

# Exponemos el puerto 8000 para el servidor embebido de Laravel
EXPOSE 8000

# Comando por defecto para iniciar el servidor de Laravel
# CMD ["php", "artisan", "serve", "--host=0.0.0.0", "--port=8000"]
CMD php artisan migrate --force && php artisan serve --host=0.0.0.0 --port=8000
